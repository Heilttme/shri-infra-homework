name: Create Release

on:
  workflow_dispatch:
    inputs:
      release_notes:
        description: 'Release notes'
        required: false

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Set up Nodejs
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm i

    - name: Run build
      run: npm run build

    - name: Create ZIP File
      run: |
        zip -r dist.zip dist
      shell: bash

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        body: ${{ github.event.inputs.release_notes }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist.zip
        asset_name: dist.zip
        asset_content_type: application/zip

    - name: Set up GitHub CLI
      run: sudo apt-get install gh
      
    - name: Get the date of the release
      id: release_date
      run: echo "::set-output name=date::$(date -u)"

    - name: Get the author of the release
      id: release_author
      run: echo "::set-output name=author::${{ github.actor }}"

    - name: Get the commits since the last release
      id: commits
      run: |
        latest_tag=$(git describe --tags --abbrev=0 HEAD^)
        echo "Latest tag: $latest_tag"
        
        commits=$(git log $latest_tag..HEAD --pretty=format:"%h - %s (%an)")
        echo "$commits"
        echo "::set-output name=commits::$commits"

    - name: Create issue
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue create --title "Release: ${{ github.event.release.tag_name }}" --body "### New Release: ${{ github.event.release.tag_name }}\n\n**Date:** ${{ steps.release_date.outputs.date }}\n\n**Author:** ${{ steps.release_author.outputs.author }}\n\n**Commits since last release:**\n${{ steps.commits.outputs.commits }}"
