name: Create Release

on:
  workflow_dispatch:
    inputs:
      release_notes:
        description: 'Release notes'
        required: false

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0 
        ref: main
      
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install

    - name: Run build
      run: npm run build

    - name: Create ZIP File
      run: |
        zip -r dist.zip dist
      shell: bash

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        body: ${{ github.event.inputs.release_notes }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist.zip
        asset_name: dist.zip
        asset_content_type: application/zip

    - name: Set up GitHub CLI
      run: sudo apt-get install gh
      
    - name: Get the date of the release
      id: release_date
      run: echo "::set-output name=date::$(date -u)"

    - name: Get the author of the release
      id: release_author
      run: echo "::set-output name=author::${{ github.actor }}"

    - name: Get the commits since the last release
      id: commits
      run: |
        latest_tag=$(git describe --tags --abbrev=0 HEAD --always 2>/dev/null || git describe --tags --abbrev=0 --always)
        echo "Latest tag: $latest_tag"
        
        commits=$(git log $latest_tag..HEAD --pretty=format:"%h - %s (%an)")
        echo "$commits"
        echo "::set-output name=commits::$commits"

    - name: Create issue
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue create \
          --title "Release: ${{ github.run_number }}" \
          --body "$(cat <<EOF
        ### New Release: ${{ github.run_number }}
        
        **Date:** ${{ steps.release_date.outputs.date }}
        
        **Author:** ${{ steps.release_author.outputs.author }}
        
        **Commits since last release:**
        ${{ steps.commits.outputs.commits }}

        **Docker image:**
        cr.yandex/crpkb2sscjdrc12okn1d/app:${{ github.run_number }}
        EOF
        )"
    - name: Changelog update
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git fetch 
        git checkout main
        git pull origin main
        yes | head -n 3 | npm run updcl
